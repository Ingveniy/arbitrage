#Первая секция. Перенаправляем все запросы с http на https
server {
	listen 80;
	listen [::]:80;
	server_name cryptopult.pro www.cryptopult.pro;
	return 301 https://cryptopult.pro$request_uri;
}

#Вторая секция. Перенаправляем запросы с www вначале на сокращенное имя
server {
	listen 443 ssl;
	ssl_certificate /etc/letsencrypt/live/cryptopult.pro/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/cryptopult.pro/privkey.pem;
	server_name www.cryptopult.pro;
	return 301 https://cryptopult.pro$request_uri;
}

#Третья секция. Здесь описываем где искать сайт локально и другие параметры.
server {
	listen 443 ssl;
	index index.html;
	root /home/melentev/www/cryptopult/cryptopult_front/build/;
	ssl_certificate /etc/letsencrypt/live/cryptopult.pro/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/cryptopult.pro/privkey.pem;
	server_name cryptopult.pro;
	gzip on;
	gzip_vary on;
	gzip_min_length 1024;
	gzip_proxied expired no-cache no-store private auth;
	gzip_http_version 1.1;
	gzip_types text/plain text/css application/json application/x-javascript application/javascript;
	gzip_disable "MSIE [1-6]\.";
	charset utf-8;

	location /.well-known/acme-challenge/QCg404NlJzDpn8S-4mBC2Y2AlRsF-5TiFgpiQRiV83Q {
		root /var/www/html;
	}

	# Запрос самого сайта
	location ~ ^/(?!(api|socket)) {
		gzip_static on;
		try_files $uri @prerender;
	}

	# Запрос дополнительных данных c api
	location ~ ^/(api|socket)/ {
		proxy_pass http://127.0.0.1:3004;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection keep-alive;
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
		proxy_set_header X-Forwarded-For $remote_addr;
		proxy_set_header X-Forwarded-Host $remote_addr;
		proxy_set_header X-Forwarded-Proto $scheme;
	}

		# Запрос дополнительных данных c api
	location ~ ^/socket {
		proxy_pass http://127.0.0.1:3004;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection keep-alive;
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
		proxy_set_header X-Forwarded-For $remote_addr;
		proxy_set_header X-Forwarded-Host $remote_addr;
		proxy_set_header X-Forwarded-Proto $scheme;
	}

	location @prerender {
		proxy_set_header X-Prerender-Token <token>;        
		set $prerender 0;
	
		if ($args ~ "_escaped_fragment_") {
			set $prerender 1;
		}
	
		if ($uri ~* "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot)") {
			set $prerender 0;
		}
        
		#resolve using DNS server to force DNS resolution and prevent caching of IPs
		resolver 1.1.1.1;
 
		if ($prerender = 1) {            
			#setting prerender as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing
			set $prerender "service.prerender.io";
			rewrite .* /$scheme://$host$request_uri? break;
			proxy_pass http://$prerender;
		}
		if ($prerender = 0) {
			rewrite .* /index.html break;
		}
	}

}